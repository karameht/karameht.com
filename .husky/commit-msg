#!/usr/bin/env bash
[ -n "$BASH_VERSION" ] && set -o pipefail

LOG_DIR=".logs"
mkdir -p "$LOG_DIR"
LOG_FILE="$LOG_DIR/commit-msg-$(date +%Y%m%d-%H%M%S).log"

echo "📝 Commit Message Validation" | tee -a "$LOG_FILE"
echo "============================" | tee -a "$LOG_FILE"

commit_msg=$(cat "$1")

# Minimum length check
if [ ${#commit_msg} -lt 10 ]; then
  echo "❌ Commit message too short! Minimum 10 characters required." | tee -a "$LOG_FILE"
  echo "💡 Your message: '$commit_msg'" | tee -a "$LOG_FILE"
  echo "💡 Example: 'feat: add accessibility tooling'" | tee -a "$LOG_FILE"
  echo "Log saved to $LOG_FILE" | tee -a "$LOG_FILE"
  exit 1
fi

# Conventional commits suggestion
printf "%s" "$commit_msg" | grep -qE "^(feat|fix|docs|style|refactor|test|chore|perf|ci|build)(\(.+\))?: .+"
if [ $? -ne 0 ]; then
  echo "⚠️  Consider using conventional commits format:" | tee -a "$LOG_FILE"
  echo "💡 feat: add new feature" | tee -a "$LOG_FILE"
  echo "💡 fix: bug fix" | tee -a "$LOG_FILE"
  echo "💡 docs: documentation update" | tee -a "$LOG_FILE"
  echo "💡 refactor: code refactoring" | tee -a "$LOG_FILE"
  echo "💡 Current message: '$commit_msg'" | tee -a "$LOG_FILE"
  echo "" | tee -a "$LOG_FILE"
  echo "🤔 Continue anyway? (y/N)" | tee -a "$LOG_FILE"
  read -r response
  if [ "$response" != "y" ] && [ "$response" != "Y" ]; then
    echo "❌ Commit cancelled. Please update your commit message." | tee -a "$LOG_FILE"
    echo "Log saved to $LOG_FILE" | tee -a "$LOG_FILE"
    exit 1
  fi
fi

echo "✅ Commit message validated!" | tee -a "$LOG_FILE"
echo "Log saved to $LOG_FILE" | tee -a "$LOG_FILE"
echo "============================" | tee -a "$LOG_FILE"
