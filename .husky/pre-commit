#!/usr/bin/env bash
[ -n "$BASH_VERSION" ] && set -o pipefail

LOG_DIR=".logs"
mkdir -p "$LOG_DIR"
LOG_FILE="$LOG_DIR/pre-commit-$(date +%Y%m%d-%H%M%S).log"

run_and_log() {
  echo ">> $*" | tee -a "$LOG_FILE"
  TMP_OUT=$(mktemp 2>/dev/null || echo "/tmp/precommit.$$.")
  "$@" >"$TMP_OUT" 2>&1
  status=$?
  cat "$TMP_OUT" | tee -a "$LOG_FILE"
  rm -f "$TMP_OUT"
  return $status
}

echo "üîç Quality Gate - Pre-Commit Checks" | tee -a "$LOG_FILE"
echo "====================================" | tee -a "$LOG_FILE"

echo "üìã Running lint-staged..." | tee -a "$LOG_FILE"
run_and_log yarn lint-staged
if [ $? -ne 0 ]; then
  echo "‚ùå lint-staged failed! See $LOG_FILE" | tee -a "$LOG_FILE"
  exit 1
fi

echo "‚ú® Verifying Prettier formatting (repo-wide)..." | tee -a "$LOG_FILE"
run_and_log yarn format:check
if [ $? -ne 0 ]; then
  echo "‚ùå Prettier check failed! Run 'yarn format' to fix. See $LOG_FILE" | tee -a "$LOG_FILE"
  exit 1
fi

echo "üìù Running Remark checks for Markdown/MDX (repo-wide)..." | tee -a "$LOG_FILE"
run_and_log yarn lint:md
if [ $? -ne 0 ]; then
  echo "‚ùå Remark found issues in Markdown/MDX. See $LOG_FILE" | tee -a "$LOG_FILE"
  exit 1
fi

echo "üîß Running TypeScript check..." | tee -a "$LOG_FILE"
run_and_log yarn tsc --noEmit
if [ $? -ne 0 ]; then
  echo "‚ùå TypeScript errors found! Fix them before committing. See $LOG_FILE" | tee -a "$LOG_FILE"
  exit 1
fi

echo "üß† Running Astro check..." | tee -a "$LOG_FILE"
run_and_log yarn check
if [ $? -ne 0 ]; then
  echo "‚ùå Astro check failed! Fix issues before committing. See $LOG_FILE" | tee -a "$LOG_FILE"
  exit 1
fi

echo "‚úÖ Pre-commit checks passed!" | tee -a "$LOG_FILE"
echo "Log saved to $LOG_FILE" | tee -a "$LOG_FILE"
echo "====================================" | tee -a "$LOG_FILE"
